import telebot
from telebot import types
import sqlite3
import time

#---–ù–∞–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¢–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞---
bot = telebot.TeleBot('6631263920:AAGeE6bwL3AFTqTRzkeq2iFALEZtYxdC51U')
ADRES_Base = 6445576278 #–ì–æ—Ç–æ–≤—ã–π id
ADRES_Premium = 6472769351 #–ì–æ—Ç–æ–≤—ã–π id
ADRES_VIP = 6252560106 #–ì–æ—Ç–æ–≤—ã–π id –ù–û–ú–ï–†: +7 (707) 325 6100

#---–ù–∞–±–æ—Ä –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
User_level = -1
global Result
Result = False

#---–°—Ç–∞—Ä—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è---
@bot.message_handler(commands=['start'])
def start(message):
    bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ /homework —á—Ç–æ –±—ã –ø–µ—Ä–µ–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ. '
                                      '–†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã –µ—Å—Ç—å –≤ –æ–¥–Ω–æ–º –∏–∑ –∫–∞–Ω–∞–ª–æ–≤ Math5Base, Math5Premium –∏–ª–∏ Math5VIP')

#---–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è---
@bot.message_handler(commands=['info'])
def info(message):
    bot.send_message(message.chat.id, message.chat.id)

@bot.message_handler(commands=['timecontrol'])
def timecontrol(message):
    VIP_Time_Control()

#---–¢–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è---
@bot.message_handler(commands=['insertnull'])
def insert(message):
    ToDataBase_ALL(0, -1, 0, 0, 0, 0)
    bot.send_message(message.chat.id, "–î–∞")

def VIP_Time_Control():
    sent_message = bot.send_message(ADRES_VIP, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –≤—Ä–µ–º—è")

    date_message_list = FromDataBase_TimeMessage()
    for date_message in date_message_list:
        if(sent_message.date >= date_message[0] + 60 * 60 * 15):
            task_id = FromDataBase_Task_ID_byTime(date_message[0])
            messageAdmin = FromDataBase_MessageAdmin_ID_by_Task_ID(task_id)
            bot.send_message(ADRES_VIP, f"–ó–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –ü—Ä–æ—à–ª–æ –±–æ–ª—å—à–µ 15 —á–∞—Å–æ–≤.", reply_to_message_id=messageAdmin)

    bot.delete_message(ADRES_VIP, sent_message.message_id)

    time.sleep(15*60)
    VIP_Time_Control()

#---–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–∞—Ö---
@bot.message_handler(commands=['homework'])
def if_in_channels(message): #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª–∞—Ö Math5VIP, Math5Premium, Math5Base

    global User_level
    global Result

    User_level = -1

    chat_member = bot.get_chat_member(-1001895565286, message.from_user.id)
    if chat_member.status in ['member', 'administrator', 'creator']: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Base
        User_level = 2

    chat_member = bot.get_chat_member(-1001516182246, message.from_user.id)
    if chat_member.status in ['member', 'administrator', 'creator']:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ Premium
        User_level = 1

    chat_member = bot.get_chat_member(-1001818638802, message.from_user.id)
    if chat_member.status in ['member', 'administrator', 'creator']: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ VIP
        User_level = 0

    if(User_level == 0 or User_level == 1 or User_level == 2):
        bot.send_message(message.chat.id, "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞‚úÖ")
        bot.send_message(message.chat.id, "–°–∫–∏–Ω—å—Ç–µ –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ –µ–≥–æ –Ω–∞ —á–∞—Å—Ç–∏, —É–∫–∞–∑–∞–≤ –Ω–æ–º–µ—Ä.")
        bot.send_message(message.chat.id,"–ë–æ—Ç –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∏–ª–∏ —Ñ–æ—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—Å—Ç–æ–º.")
        Result = True
    else:
        bot.send_message(message.chat.id, "‚ùå–í—ã –Ω–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö. –ó–∞–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª—ã –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ —á–∞—Ç –±–æ—Ç @Matesha_online_ChannelsBot. –ï—Å–ª–∏ –≤—ã –≤ –∫–∞–Ω–∞–ª–∞—Ö, —Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ <a href='https://t.me/azamat_kireyev'>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É</a> –∏–ª–∏ <a href='https://t.me/Kireyev_Abai'>—Ç–µ—Ö –ø–æ–¥–¥–µ—Ä–∂–∫–µ</a>.", parse_mode='html')

#---–î–õ–Ø –ê–î–ú–ò–ù–û–í, –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π---
@bot.message_handler(commands=['list'])
def list(message):
    if(message.chat.id == ADRES_VIP):
        bot.send_message(ADRES_VIP, "VIP –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã:")
        DB_list = FromDataBase_Task_ID_VIP_notAnswer()
        list_var = '–ó–∞–¥–∞–Ω–∏—è:'
        for CASH in DB_list:
            bot.send_message(ADRES_VIP, f"#‚É£{CASH[0]}", reply_to_message_id=FromDataBase_MessageAdmin_ID_by_Task_ID(CASH[0]))

    if (message.chat.id == ADRES_Premium):
        bot.send_message(ADRES_Premium, "Premium –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã:")
        DB_list = FromDataBase_Task_ID_Premium_notAnswer()
        list_var = '–ó–∞–¥–∞–Ω–∏—è:'
        for CASH in DB_list:
            list_var = list_var + "#‚É£" + str(CASH[0]) + ", "
        bot.send_message(ADRES_Premium, list_var)

    if (message.chat.id == ADRES_Base):
        bot.send_message(ADRES_Base, "Base –∑–∞–¥–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã:")
        DB_list = FromDataBase_Task_ID_BASE_notAnswer()
        list_var = '–ó–∞–¥–∞–Ω–∏—è:'
        for CASH in DB_list:
            list_var = list_var + "#‚É£" + str(CASH[0]) + ", "
        bot.send_message(ADRES_Base, list_var)


#---–§–æ—Ç–æ-—Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –≥–æ—Ç–æ–≤—è—Ç—å—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ---
@bot.message_handler(content_types=['photo'])
def Send_Photo(message):
    global Result

    if(Result):

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ SQL –∑–∞–ø—Ä–æ—Å–∞–º
        var_ID = FromDataBase_ID_LAST() + 1
        var_Task_ID = FromDataBase_Task_ID_LAST()
        var_Task_ID = var_Task_ID % 1000000 + 1
        var_ChatUser_ID = message.chat.id
        var_Answer = 0

        markup = types.InlineKeyboardMarkup()

        if (User_level == 0):
            markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_VIP_PHOTO"))
            photo = message.photo[-1]
            sent_message = bot.send_photo(ADRES_VIP, photo.file_id, caption=f"üåüVIP –ó–∞–¥–∞–Ω–∏eüåü #‚É£{var_Task_ID+3000000}\nüìù{message.caption}\n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

            var_MessageAdmin_ID = sent_message.message_id
            bot.send_message(message.chat.id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è: #‚É£{var_Task_ID + 3000000}")

            ToDataBase_ALL(var_ID, var_Task_ID + 3000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

        if (User_level == 1):
            markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_PREMIUM_PHOTO"))
            photo = message.photo[-1]
            sent_message = bot.send_photo(ADRES_Premium, photo.file_id, caption=f"‚≠êÔ∏èPremium –ó–∞–¥–∞–Ω–∏e‚≠êÔ∏è #‚É£{var_Task_ID+2000000}\nüìù{message.caption}\n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

            var_MessageAdmin_ID = sent_message.message_id
            bot.send_message(message.chat.id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è: #‚É£{var_Task_ID + 2000000}")

            ToDataBase_ALL(var_ID, var_Task_ID + 2000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

        if (User_level == 2):
            markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_BASE_PHOTO"))
            photo = message.photo[-1]
            sent_message = bot.send_photo(ADRES_Base, photo.file_id, caption=f"5Ô∏è‚É£Base –ó–∞–¥–∞–Ω–∏e5Ô∏è‚É£ #‚É£{var_Task_ID+1000000}\nüìù{message.caption}\n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

            var_MessageAdmin_ID = sent_message.message_id
            bot.send_message(message.chat.id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è: #‚É£{var_Task_ID + 1000000}")

            ToDataBase_ALL(var_ID, var_Task_ID + 1000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

        Result = False


#---CallBack, –ö–Ω–æ–ø–∫–∞ "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"---
@bot.callback_query_handler(func=lambda callback:True)
def callback_message(callback):

    #CALL_BACK –¥–ª—è –¢–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    if(callback.data == 'HAS_ANSWER_VIP'):
        new_text = callback.message.text.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_text(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_VIP, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")

    if(callback.data == 'HAS_ANSWER_PREMIUM'):
        new_text = callback.message.text.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_text(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_Premium, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")

    if(callback.data == 'HAS_ANSWER_BASE'):
        new_text = callback.message.text.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_text(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_Base, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")

    if (callback.data == 'HAS_ANSWER_VIP_PHOTO'):
        new_text = callback.message.caption.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_caption(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_VIP, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")

    if (callback.data == 'HAS_ANSWER_PREMIUM_PHOTO'):
        new_text = callback.message.caption.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_caption(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_Premium, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")

    if (callback.data == 'HAS_ANSWER_BASE_PHOTO'):
        new_text = callback.message.caption.replace("‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", "")
        bot.edit_message_caption(f"{new_text}‚úÖ–í—ã–ø–æ–ª–Ω–µ–Ω–æ‚úÖ", ADRES_Base, callback.message.message_id)
        chat_ID = FromDataBase_Chat_ID(callback.message.message_id)
        task_id = FromDataBase_Task_ID(callback.message.message_id)
        UpdateDataBase_Answer(callback.message.message_id)
        bot.send_message(chat_ID, f"‚úÖ–í–∞—à–µ –∑–∞–¥–∞–Ω–∏–µ #‚É£{task_id} –≤—ã–ø–æ–ª–Ω–µ–Ω–æ. –û—Ç–≤–µ—Ç —É–∂–µ –≤ –∫–∞–Ω–∞–ª–∞—Ö")


#---–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–æ—Ç–æ—Ä—ã–µ –≥–æ—Ç–æ–≤—è—Ç—å—Å—è –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ---
@bot.message_handler(content_types=['text'])
def Homework(message):

    global Result
    global User_level

    if(message.text != "/start" or message.text != "/info" or message.text != "/homework"):
        if(Result):

            #–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ SQL –∑–∞–ø—Ä–æ—Å–∞–º
            var_ID = FromDataBase_ID_LAST() + 1
            var_Task_ID = FromDataBase_Task_ID_LAST()
            var_Task_ID = var_Task_ID % 1000000 + 1
            var_ChatUser_ID = message.chat.id
            var_Answer = 0

            markup = types.InlineKeyboardMarkup()

            if(User_level == 0):
                markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_VIP"))
                sent_message = bot.send_message(ADRES_VIP, f"üåüVIP –ó–∞–¥–∞–Ω–∏eüåü #‚É£{var_Task_ID+3000000} \n {message.text} \n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

                var_MessageAdmin_ID = sent_message.message_id
                bot.send_message(message.chat.id, f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê. –ù–æ–º–µ—Ä –≤–∞—à–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è: #‚É£{var_Task_ID + 3000000}")

                ToDataBase_ALL(var_ID, var_Task_ID+3000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

            if(User_level == 1):
                markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_PREMIUM"))
                sent_message = bot.send_message(ADRES_Premium, f"‚≠êÔ∏èPremium –ó–∞–¥–∞–Ω–∏e‚≠êÔ∏è #‚É£{var_Task_ID+2000000}\n {message.text} \n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

                var_MessageAdmin_ID = sent_message.message_id
                bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê")

                ToDataBase_ALL(var_ID, var_Task_ID+2000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

            if(User_level == 2):
                markup.add(types.InlineKeyboardButton("–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ", callback_data="HAS_ANSWER_BASE"))
                sent_message = bot.send_message(ADRES_Base, f"5Ô∏è‚É£Base –ó–∞–¥–∞–Ω–∏e5Ô∏è‚É£ #‚É£{var_Task_ID+1000000}\n {message.text} \n‚ùå–ù–µ –í—ã–ø–æ–ª–Ω–µ–Ω–æ‚ùå", reply_markup=markup)

                var_MessageAdmin_ID = sent_message.message_id
                bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µüïê")

                ToDataBase_ALL(var_ID, var_Task_ID+1000000, var_MessageAdmin_ID, var_ChatUser_ID, var_Answer, message.date)

#---–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã DataBase---
conn = sqlite3.connect('homework.db')
cur = conn.cursor()

cur.execute('''CREATE TABLE IF NOT EXISTS tasks(
    ID INTEGER PRIMARY KEY,
    Task_ID INTEGER,
    MessageAdmin_ID INTEGER,
    ChatUser_ID INTEGER,
    Answer INTEGER,
    Time_Message INTEGER);
    ''')
conn.commit()
conn.close()

def FromDataBase_ID_LAST():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT ID FROM tasks''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[-1][0]

    conn.close()
    return DB_Result

def FromDataBase_Task_ID_LAST():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT Task_ID FROM tasks''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[-1][0]

    conn.close()
    return DB_Result

def FromDataBase_Chat_ID(var_messageAdmin_ID):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute(f'''SELECT ChatUser_ID FROM tasks WHERE MessageAdmin_ID = {var_messageAdmin_ID}''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[0][0]

    conn.close()
    return DB_Result

def FromDataBase_Task_ID(var_messageAdmin_ID):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute(f'''SELECT Task_ID FROM tasks WHERE MessageAdmin_ID = {var_messageAdmin_ID}''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[0][0]

    conn.close()
    return DB_Result

def FromDataBase_Task_ID_byTime(var_TimeMessage):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute(f'''SELECT Task_ID FROM tasks WHERE Time_Message = {var_TimeMessage}''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[0][0]

    conn.close()
    return DB_Result

def FromDataBase_MessageAdmin_ID_by_Task_ID(var_Task_ID):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute(f'''SELECT MessageAdmin_ID FROM tasks WHERE Task_ID = {var_Task_ID}''')
    DB_CASH = cur.fetchall()
    DB_Result = DB_CASH[0][0]

    conn.close()
    return DB_Result

def ToDataBase_ALL(var_ID, var_Task_ID, var_messageAdmin_ID, var_chatUser_ID, Answer, Datatime):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    DB_CASH = (var_ID, var_Task_ID, var_messageAdmin_ID, var_chatUser_ID, Answer, Datatime)
    cur.execute('''INSERT INTO tasks VALUES(?, ?, ?, ?, ?, ?)''', DB_CASH)
    conn.commit()

    conn.close()

def UpdateDataBase_Answer(var_messageAdmin_ID):
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute(f'''UPDATE tasks SET Answer = 1 WHERE MessageAdmin_ID = {var_messageAdmin_ID}''')
    conn.commit()

    conn.close()

def FromDataBase_Task_ID_VIP_notAnswer():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT Task_ID FROM tasks WHERE Task_ID > 3000000 AND Answer = 0''')
    DB_Result = cur.fetchall()

    conn.close()
    return DB_Result

def FromDataBase_Task_ID_Premium_notAnswer():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT Task_ID FROM tasks WHERE  Task_ID > 200000 AND Task_ID < 3000000 AND Answer = 0''')
    DB_Result = cur.fetchall()

    conn.close()
    return DB_Result

def FromDataBase_Task_ID_BASE_notAnswer():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT Task_ID FROM tasks WHERE Task_ID > 1000000 AND Task_ID < 2000000 AND Answer = 0''')
    DB_Result = cur.fetchall()

    conn.close()
    return DB_Result

def FromDataBase_TimeMessage():
    conn = sqlite3.connect('homework.db')
    cur = conn.cursor()

    cur.execute('''SELECT Time_Message FROM tasks WHERE Task_ID > 3000000 AND Answer = 0''')
    DB_Result = cur.fetchall()

    conn.close()
    return DB_Result

bot.polling(none_stop=True)